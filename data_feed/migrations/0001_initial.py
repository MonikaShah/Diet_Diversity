# Generated by Django 3.0.8 on 2021-03-21 05:00

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('registration', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BodyModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(null=True)),
                ('weightunit', models.CharField(max_length=20)),
                ('height', models.IntegerField(null=True)),
                ('heightunit', models.CharField(max_length=20)),
                ('bmi', models.IntegerField(null=True)),
                ('waist', models.IntegerField(null=True)),
                ('waistunit', models.CharField(max_length=20)),
                ('hip', models.IntegerField(null=True)),
                ('hipunit', models.CharField(max_length=20)),
                ('whratio', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('issues', models.TextField(max_length=2000)),
                ('suggestions', models.TextField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformationForms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqueid', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('dob', models.DateField()),
                ('year', models.CharField(max_length=4)),
                ('month', models.CharField(max_length=2)),
                ('days', models.CharField(max_length=2)),
                ('fathername', models.CharField(max_length=200)),
                ('mothername', models.CharField(max_length=200)),
                ('contactnumber', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(max_length=2000)),
                ('profileimage', models.ImageField(upload_to='profileimages/%Y/%m/%d')),
            ],
        ),
        migrations.CreateModel(
            name='PregnantWoman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqueid', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('weight', models.IntegerField()),
                ('weightunit', models.CharField(max_length=50)),
                ('height', models.IntegerField()),
                ('heightunit', models.CharField(max_length=50)),
                ('bmi', models.DecimalField(decimal_places=2, max_digits=5)),
                ('age', models.IntegerField()),
                ('hemoglobinvalue', models.IntegerField()),
                ('hemoglobindate', models.DateField(blank=True, default=datetime.datetime.now)),
                ('food', models.CharField(blank=True, max_length=50)),
                ('complication', models.CharField(max_length=50)),
                ('medication', models.CharField(max_length=50)),
                ('health', models.CharField(blank=True, max_length=50)),
                ('medical', models.CharField(max_length=50)),
                ('uploaded_file', models.FileField(upload_to='pregnantwomandocuments/%Y/%m/%d')),
                ('feedback', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='studentprof',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=100, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('age', models.CharField(max_length=50, null=True)),
                ('schoolname', models.CharField(max_length=200, null=True)),
                ('schoolcordinatorincharge', models.CharField(max_length=200, null=True)),
                ('schooladdress', models.CharField(max_length=200, null=True)),
                ('schoolcontactinformation', models.CharField(max_length=200, null=True)),
                ('uploaded_photo', models.ImageField(upload_to='studentpp/%Y/%m/%d')),
                ('personaladdress', models.CharField(max_length=200, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='scprof',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=100, null=True)),
                ('personaladdress', models.CharField(max_length=2000, null=True)),
                ('birthdate', models.CharField(max_length=2000, null=True)),
                ('age', models.CharField(blank=True, max_length=200)),
                ('schooladdress', models.CharField(max_length=2000, null=True)),
                ('education', models.CharField(blank=True, choices=[('Professionaldegree', 'Professionaldegree'), ('Graduate', 'Graduate (Bachelors)'), ('Middleschool', 'Middle school (5th to 10th std)'), ('Primaryschool', 'Primary school (1st to 4th std)'), ('Illiterate', 'Illiterate (No education)')], max_length=2000)),
                ('occupation', models.CharField(blank=True, choices=[('Legislators,Senior Officials & Managers', 'Legislators,Senior Officials & Managers'), ('Professionals', 'Professionals'), ('Technicians and Associate Professionals', 'Technicians and Associate Professionals'), ('Clerks', 'Clerks'), ('Skilled workers and Shop & Market sales workers ', 'Skilled workers and Shop & Market sales workers '), ('Skilled Agricultural', 'Skilled Agricultural and Fishery workers'), ('Craft and Related Trade Workers', 'Craft and Related Trade Workers'), ('Plant and Machine Operators and Assemblers', 'Plant and Machine Operators and Assemblers'), ('Elementary Occupation', 'Elementary Occupation'), ('Security guard', 'Security guard'), ('Housekeeper or Housemaid', 'Housekeeper or Housemaid'), ('Nurse', 'Nurse'), ('Anganwadi Worker', 'Anganwadi Worker'), ('Retired', 'Retired'), ('Others', 'Others')], max_length=2000)),
                ('annualincome', models.CharField(blank=True, choices=[('199,862', '199,862'), ('99,931-199,861', '99,931-199,861'), ('74,755-99,930', '74,755-99,930'), ('49,962-74,755', '49,962-74,755'), ('29,973-49,961', '29,973-49,961'), ('10,002-29,97', '10,002-29,97'), ('10,001', '10,001')], max_length=25500)),
                ('profile_photo', models.ImageField(blank=True, upload_to='SchoolCoordinator/%Y/%m/%d')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='registration.SchoolCoordinator')),
            ],
        ),
        migrations.CreateModel(
            name='ngprof',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=100, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('age', models.CharField(max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='registration.Mentor')),
            ],
        ),
        migrations.CreateModel(
            name='msprof',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=100, null=True)),
                ('anganwadinumber', models.IntegerField(default=False)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('age', models.CharField(blank=True, max_length=200)),
                ('education', models.CharField(blank=True, choices=[('Professionaldegree', 'Professionaldegree'), ('Graduate', 'Graduate (Bachelors)'), ('Middleschool', 'Middle school (5th to 10th std)'), ('Primaryschool', 'Primary school (1st to 4th std)'), ('Illiterate', 'Illiterate (No education)')], max_length=2000)),
                ('occupation', models.CharField(blank=True, choices=[('Legislators,Senior Officials & Managers', 'Legislators,Senior Officials & Managers'), ('Professionals', 'Professionals'), ('Technicians and Associate Professionals', 'Technicians and Associate Professionals'), ('Clerks', 'Clerks'), ('Skilled workers and Shop & Market sales workers ', 'Skilled workers and Shop & Market sales workers '), ('Skilled Agricultural', 'Skilled Agricultural and Fishery workers'), ('Craft and Related Trade Workers', 'Craft and Related Trade Workers'), ('Plant and Machine Operators and Assemblers', 'Plant and Machine Operators and Assemblers'), ('Elementary Occupation', 'Elementary Occupation'), ('Security guard', 'Security guard'), ('Housekeeper or Housemaid', 'Housekeeper or Housemaid'), ('Nurse', 'Nurse'), ('Anganwadi Worker', 'Anganwadi Worker'), ('Retired', 'Retired'), ('Others', 'Others')], max_length=2000)),
                ('annualincome', models.CharField(blank=True, choices=[('199,862', '199,862'), ('99,931-199,861', '99,931-199,861'), ('74,755-99,930', '74,755-99,930'), ('49,962-74,755', '49,962-74,755'), ('29,973-49,961', '29,973-49,961'), ('10,002-29,97', '10,002-29,97'), ('10,001', '10,001')], max_length=25500)),
                ('profile_photo', models.ImageField(blank=True, upload_to='MukhyaSevika/%Y/%m/%d')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='registration.MukhyaSevika')),
            ],
        ),
        migrations.CreateModel(
            name='mentorprof',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=100, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('age', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=200)),
                ('education', models.CharField(choices=[('Professionaldegree', 'Professionaldegree'), ('Graduate', 'Graduate (Bachelors)'), ('Middleschool', 'Middle school (5th to 10th std)'), ('Primaryschool', 'Primary school (1st to 4th std)'), ('Illiterate', 'Illiterate (No education)')], max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='registration.Mentor')),
            ],
        ),
        migrations.CreateModel(
            name='EatTodayModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foodhabbits', models.CharField(max_length=200)),
                ('foodallergies', models.CharField(max_length=200)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data_feed.BodyModel')),
            ],
        ),
        migrations.CreateModel(
            name='DietModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mealtype', models.CharField(max_length=200)),
                ('timefrom', models.TimeField()),
                ('timeto', models.TimeField()),
                ('recipe', models.CharField(max_length=100, null=True)),
                ('rotiquantity', models.IntegerField(blank=True, default=0, null=True)),
                ('rotiunit', models.CharField(blank=True, max_length=200, null=True)),
                ('ricequantity', models.IntegerField(blank=True, default=0, null=True)),
                ('riceunit', models.CharField(blank=True, max_length=200, null=True)),
                ('pohaquantity', models.IntegerField(blank=True, default=0, null=True)),
                ('pohaunit', models.CharField(blank=True, max_length=200, null=True)),
                ('upmaquantity', models.IntegerField(blank=True, default=0, null=True)),
                ('upmaunit', models.CharField(blank=True, max_length=200, null=True)),
                ('teaquantity', models.IntegerField(blank=True, default=0, null=True)),
                ('teaunit', models.CharField(blank=True, max_length=200, null=True)),
                ('coffeequantity', models.IntegerField(blank=True, default=0, null=True)),
                ('coffeeunit', models.CharField(blank=True, max_length=200, null=True)),
                ('milkquantity', models.IntegerField(blank=True, default=0, null=True)),
                ('milkunit', models.CharField(blank=True, max_length=200, null=True)),
                ('vadaquantity', models.IntegerField(blank=True, default=0, null=True)),
                ('biscuitquantity', models.IntegerField(blank=True, default=0, null=True)),
                ('dalquantity', models.IntegerField(blank=True, default=0, null=True)),
                ('dalunit', models.CharField(blank=True, max_length=200, null=True)),
                ('gujratidalquantity', models.IntegerField(blank=True, default=0, null=True)),
                ('gujratidalunit', models.CharField(blank=True, max_length=200, null=True)),
                ('toordalquantity', models.IntegerField(blank=True, default=0, null=True)),
                ('toordalunit', models.CharField(blank=True, max_length=200, null=True)),
                ('moongdalquantity', models.IntegerField(blank=True, default=0, null=True)),
                ('moongdalunit', models.CharField(blank=True, max_length=200, null=True)),
                ('palakquantity', models.IntegerField(blank=True, default=0, null=True)),
                ('palakunit', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data_feed.EatTodayModel')),
            ],
        ),
        migrations.CreateModel(
            name='DailyScheduleForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(max_length=100, null=True)),
                ('sleepfrom', models.TimeField(null=True)),
                ('sleepto', models.TimeField(null=True)),
                ('eatfrom', models.TimeField(null=True)),
                ('eatto', models.TimeField(null=True)),
                ('studyfrom', models.TimeField(null=True)),
                ('studyto', models.TimeField(null=True)),
                ('playfrom', models.TimeField(null=True)),
                ('playto', models.TimeField(null=True)),
                ('housework', models.CharField(max_length=500)),
                ('activities', models.CharField(max_length=500)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data_feed.PersonalInformationForms')),
            ],
        ),
        migrations.AddField(
            model_name='bodymodel',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data_feed.DailyScheduleForm'),
        ),
        migrations.CreateModel(
            name='awprof',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=100, null=True)),
                ('birthdate', models.CharField(max_length=2000, null=True)),
                ('age', models.CharField(blank=True, max_length=200)),
                ('education', models.CharField(blank=True, choices=[('Professionaldegree', 'Professionaldegree'), ('Graduate', 'Graduate (Bachelors)'), ('Middleschool', 'Middle school (5th to 10th std)'), ('Primaryschool', 'Primary school (1st to 4th std)'), ('Illiterate', 'Illiterate (No education)')], max_length=2000)),
                ('occupation', models.CharField(blank=True, choices=[('Legislators,Senior Officials & Managers', 'Legislators,Senior Officials & Managers'), ('Professionals', 'Professionals'), ('Technicians and Associate Professionals', 'Technicians and Associate Professionals'), ('Clerks', 'Clerks'), ('Skilled workers and Shop & Market sales workers ', 'Skilled workers and Shop & Market sales workers '), ('Skilled Agricultural', 'Skilled Agricultural and Fishery workers'), ('Craft and Related Trade Workers', 'Craft and Related Trade Workers'), ('Plant and Machine Operators and Assemblers', 'Plant and Machine Operators and Assemblers'), ('Elementary Occupation', 'Elementary Occupation'), ('Security guard', 'Security guard'), ('Housekeeper or Housemaid', 'Housekeeper or Housemaid'), ('Nurse', 'Nurse'), ('Anganwadi Worker', 'Anganwadi Worker'), ('Retired', 'Retired'), ('Others', 'Others')], max_length=2000)),
                ('annualincome', models.CharField(blank=True, choices=[('199,862', '199,862'), ('99,931-199,861', '99,931-199,861'), ('74,755-99,930', '74,755-99,930'), ('49,962-74,755', '49,962-74,755'), ('29,973-49,961', '29,973-49,961'), ('10,002-29,97', '10,002-29,97'), ('10,001', '10,001')], max_length=25500)),
                ('anganwadiname', models.CharField(max_length=255, null=True)),
                ('anganwadiaddress', models.CharField(max_length=255, null=True)),
                ('profile_photo', models.ImageField(blank=True, upload_to='AnganwadiWorker/%Y/%m/%d')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='registration.AnganwadiWorkersRegister')),
            ],
        ),
        migrations.CreateModel(
            name='anemicadolescentgirlprof',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=100, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('age', models.CharField(max_length=50)),
                ('occupation', models.CharField(choices=[('Legislators,Senior Officials & Managers', 'Legislators,Senior Officials & Managers'), ('Professionals', 'Professionals'), ('Technicians and Associate Professionals', 'Technicians and Associate Professionals'), ('Clerks', 'Clerks'), ('Skilled workers and Shop & Market sales workers ', 'Skilled workers and Shop & Market sales workers '), ('Skilled Agricultural', 'Skilled Agricultural and Fishery workers'), ('Craft and Related Trade Workers', 'Craft and Related Trade Workers'), ('Plant and Machine Operators and Assemblers', 'Plant and Machine Operators and Assemblers'), ('Elementary Occupation', 'Elementary Occupation'), ('Security guard', 'Security guard'), ('Housekeeper or Housemaid', 'Housekeeper or Housemaid'), ('Nurse', 'Nurse'), ('Anganwadi Worker', 'Anganwadi Worker'), ('Retired', 'Retired'), ('Others', 'Others')], max_length=2550)),
                ('education', models.CharField(choices=[('Professionaldegree', 'Professionaldegree'), ('Graduate', 'Graduate (Bachelors)'), ('Middleschool', 'Middle school (5th to 10th std)'), ('Primaryschool', 'Primary school (1st to 4th std)'), ('Illiterate', 'Illiterate (No education)')], max_length=255, null=True)),
                ('annualincome', models.CharField(choices=[('199,862', '199,862'), ('99,931-199,861', '99,931-199,861'), ('74,755-99,930', '74,755-99,930'), ('49,962-74,755', '49,962-74,755'), ('29,973-49,961', '29,973-49,961'), ('10,002-29,97', '10,002-29,97'), ('10,001', '10,001')], max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('weightunit', models.CharField(choices=[('kgs', 'kgs'), ('lbs', 'lbs')], max_length=255)),
                ('height', models.IntegerField()),
                ('heightunit', models.CharField(choices=[('feet', 'feet'), ('inches', 'inches'), ('cms', 'cms'), ('inches', 'inches')], max_length=50)),
                ('bmi', models.DecimalField(decimal_places=3, max_digits=10)),
                ('waist', models.IntegerField(null=True)),
                ('waistunit', models.CharField(choices=[('cms', 'cms'), ('inches', 'inches')], max_length=20)),
                ('hip', models.IntegerField(null=True)),
                ('hipunit', models.CharField(choices=[('cms', 'cms'), ('inches', 'inches')], max_length=20)),
                ('whratio', models.DecimalField(decimal_places=3, max_digits=10, null=True)),
                ('whratioderived', models.IntegerField(null=True)),
                ('foodhabits', models.CharField(choices=[('Vegetarian', 'Vegetarian'), ('Non-Vegetarian', 'Non-Vegetarian')], max_length=20, null=True)),
                ('profile_photo', models.FileField(upload_to='anemicadolescentgirl/%Y/%m/%d')),
                ('feedback', models.CharField(max_length=2550)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
